PATH="$HOME/bin:$HOME/.home/bin:$HOME/.home/bin/git:$PATH"

# Source z
if [[ -s "/usr/local/etc/profile.d/z.sh" ]]; then
	. /usr/local/etc/profile.d/z.sh
fi

# Source fzf
[ -f $HOME/.home/zsh/.fzf.zsh ] && source $HOME/.home/zsh/.fzf.zsh

# Source kubectl
type kubectl &>/dev/null && source <(kubectl completion zsh)

# Source fubectl
[ -f $HOME/.home/zsh/fubectl/fubectl.source ] && source $HOME/.home/zsh/fubectl/fubectl.source

# Source tmuxinator
source $HOME/.home/zsh/tmuxinator/completion/tmuxinator.zsh

# Enable sourcing bash completions
autoload bashcompinit
bashcompinit

# Note: git's git-completion.zsh file conflicts with zsh's _git file, you may have to rm/mv `/usr/local/share/zsh/site-functions/_git -> ../../../Cellar/git/2.14.1/share/zsh/site-functions/_git`
# TODO: Maybe brew install order matters here?
source "$HOME/.home/bin/git/.zcompletion"

# Source asdf
type brew &>/dev/null && { [ -f $(brew --prefix asdf)/libexec/asdf.sh ] && source $(brew --prefix asdf)/libexec/asdf.sh ; [ -f $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash ] && source $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash }

# Source kubeswitch
[ -f $(brew --prefix switch)/switch.sh ] && source $(brew --prefix switch)/switch.sh
[ -f $(brew --prefix switch)/switch.sh ] && source $HOME/.home/zsh/kubeswitch/_switch.bash

# Source kube-ps1
[ -f $(brew --prefix kube-ps1)/share/kube-ps1.sh ] && source $(brew --prefix kube-ps1)/share/kube-ps1.sh
#[ -f $(brew --prefix kube-ps1)/share/kube-ps1.sh ] && PROMPT="${PROMPT}--$(kube_ps1)"

# C-b to erase current prompt, run a command, then return the current prompt as it was
bindkey '^B' push-line

# Settings
EDITOR="vim"
PAGER="less"
VISUAL="vim"

# Aliases
alias rsync.exact="rsync -rtpogxv -P -l -H"
alias rsync.loose="rsync -zvru -P"
alias rgrep="grep -r"
alias vimconflicts='vim -p +/"<<<<<<<" $( git diff --name-only --diff-filter=U | uniq | xargs )'
alias -g g="| grep"
alias -g l="| less"
alias df="pydf 2>/dev/null || df -h"
alias tf="terraform"
alias k="kubectl"
alias mux="tmuxinator"
alias kubectx="switch"
ffmpeg_concat() {
  cat <<-'EOF'
Run this command (edit accordingly):

PATTERN=GH*162.MP4 DIR=/Users/cjohnson/SDCard; ffmpeg -f concat -safe 0 -i <(for f in $DIR/$~PATTERN; do echo "file '$f'"; done) -c copy ~/Downloads/foo.mp4
EOF
}
ffmpeg_concat_all() {
	DIR=/Users/cjohnson/SDCard
	cd $DIR
	VIDEOS=("${(@f)$(ls *MP4 | awk '{ print substr($0,5,4) }' | sort -u)}")
	for video ("$VIDEOS[@]"); do
		echo
		echo "Found ${DIR}/GH0X${video}.MP4"
		echo
		read -k1 "tmp?Copy? [n/y/a] "
		if [[ "$tmp" == "a" ]]; then
			break
		elif [[ "$tmp" == "n" ]]; then
			continue
		fi

		echo
		echo

		PATTERN="GH*${video}.MP4"
		DIR=/Users/cjohnson/SDCard
		ffmpeg -f concat -safe 0 -i <(for f in $DIR/$~PATTERN; do echo "file '$f'"; done) -c copy "${HOME}/Downloads/GH0X${video}.mp4"

		echo
		echo
		echo "Done"
		echo
		echo
		echo
	done
}

mvln(){
	# Get an absolute path for the target
	tp="`dirname $2`/`basename $2`/"
	tp="$tp:A"

	# If the target doesn't include a new filename, use the same filename as the source
	if [ -d "$2" ]; then
		t="$tp/`basename $1`"
	else
		t="$tp"
	fi

	# Full path to source, even if it was specified as relative
	s="$1:A"

	mv "$s" "$t" && ln -s "$t" "$s"
}

lens() {
	if [ ! -d $HOME/.kube-lens ]; then
		mkdir $HOME/.kube-lens
		wget -O $HOME/.kube-lens/index.html https://raw.githubusercontent.com/mac2000/notlens/main/index.html
	fi

	if ! pgrep -f 'kubectl proxy' >/dev/null; then
		kubectl proxy --www=$HOME/.kube-lens/ --www-prefix=/lens/ &
		proxy_pid=$!
		sleep 1
		trap "kill -9 ${proxy_pid}" EXIT
		trap "kill -9 ${proxy_pid}" SIGINT
	fi

	open http://localhost:8001/lens/index.html

	if [ "$proxy_pid" != "" ]; then
		wait $proxy_pid
	fi
}



# Load any local zshrc overrides
if [ -s ~/.zshrc_local ]; then
	. ~/.zshrc_local
fi
